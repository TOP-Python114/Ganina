"""
Напишите итератор колоды карт (52 карты). При вызове функции next() будет представлена следующая карта.
Каждая карта представлена в виде кортежа типа (2, 'пики').
Номиналы: 1 — туз, 11 — валет, 12 — дама, 13 — король
Порядок следования мастей: черви, бубны, пики, крести.
"""
from random import choice
from typing import Iterable
from time import perf_counter as pc


card_list = []

# ОТВЕТИТЬ: а вы понимаете, почему здесь вы передаёте в функцию iter() ещё пустой список, а во втором цикле итерируетесь по уже заполненному списку — не обновляя объект в переменной numbers_iterator?
numbers_iterator = iter(card_list)

for i in ['черви', 'бубны', 'пики', 'крести']:
    for j in range(1, 14):
        card_list.append((j, i))
for _ in card_list:
    print(next(numbers_iterator))


# Реализуйте функцию-генератор для получения перемешанной колоды.
# Подсказка: используйте функцию choice() из модуля random

# ИСПРАВИТЬ: аннотации и документация обязательны
def mix_card(cards):
    # ИСПОЛЬЗОВАТЬ: а ещё можно через множество сделать, тогда удастся избежать явной проверки внутри цикла
    card_list_mix = []
    while len(card_list_mix) < 52:
        card_mix = choice(cards)
        if card_mix not in card_list_mix:
            card_list_mix.append(card_mix)
            yield card_mix


# ИСПОЛЬЗОВАТЬ: но это всё довольно неэффективно, потому как количество итераций цикла намного больше, чем требуется — лучше удалять карту из колоды
def mix_card_better(deck: Iterable):
    """Возвращает генератор случайных карт для колоды из 52 карт."""
    # КОММЕНТАРИЙ: на случай, если в функцию передали не список
    deck = list(deck)
    # КОММЕНТАРИЙ: пока этот список не станет пустым
    while deck:
        card = choice(deck)
        deck.remove(card)
        yield card


print("\nПеремешанная колода карт:")
deck_mix_card = mix_card(card_list)
start = pc()
for i in deck_mix_card:
    print(i, end=', ')
end = pc()
print(f"\b\b\n>> ушло времени времени на перемешивание: {end - start:.6f} c")


print("\nБыстрее перемешанная колода карт:")
deck_shuffled = mix_card_better(card_list)
start = pc()
for i in deck_shuffled:
    print(i, end=', ')
end = pc()
print(f"\b\b\n>> ушло времени времени на перемешивание: {end - start:.6f} c")


"""
Перемешанная колода карт:
(5, 'черви'), (2, 'крести'), (3, 'черви'), (4, 'крести'), (4, 'бубны'), (9, 'пики'), (1, 'черви'), (11, 'бубны'), (8, 'пики'), (8, 'бубны'), (2, 'бубны'), (3, 'пики'), (12, 'черви'), (7, 'черви'), (5, 'крести'), (12, 'крести'), (2, 'пики'), (10, 'бубны'), (4, 'пики'), (1, 'бубны'), (1, 'крести'), (13, 'бубны'), (10, 'черви'), (12, 'пики'), (13, 'черви'), (7, 'крести'), (5, 'бубны'), (8, 'черви'), (6, 'пики'), (9, 'бубны'), (7, 'пики'), (13, 'пики'), (3, 'бубны'), (7, 'бубны'), (12, 'бубны'), (2, 'черви'), (11, 'пики'), (3, 'крести'), (5, 'пики'), (1, 'пики'), (11, 'крести'), (8, 'крести'), (6, 'крести'), (9, 'крести'), (11, 'черви'), (6, 'черви'), (6, 'бубны'), (9, 'черви'), (10, 'крести'), (13, 'крести'), (10, 'пики'), (4, 'черви')
>> ушло времени времени на перемешивание: 0.000670 c

Быстрее перемешанная колода карт:
(1, 'крести'), (9, 'пики'), (12, 'черви'), (12, 'пики'), (7, 'пики'), (8, 'пики'), (13, 'крести'), (10, 'пики'), (5, 'крести'), (7, 'крести'), (6, 'черви'), (12, 'бубны'), (10, 'бубны'), (6, 'пики'), (9, 'бубны'), (8, 'бубны'), (7, 'бубны'), (2, 'пики'), (13, 'пики'), (5, 'бубны'), (5, 'пики'), (4, 'бубны'), (11, 'бубны'), (10, 'черви'), (10, 'крести'), (12, 'крести'), (5, 'черви'), (7, 'черви'), (1, 'пики'), (1, 'черви'), (2, 'крести'), (4, 'пики'), (3, 'пики'), (1, 'бубны'), (9, 'крести'), (8, 'черви'), (8, 'крести'), (13, 'черви'), (6, 'крести'), (11, 'пики'), (9, 'черви'), (6, 'бубны'), (4, 'черви'), (3, 'крести'), (3, 'бубны'), (2, 'черви'), (2, 'бубны'), (13, 'бубны'), (4, 'крести'), (11, 'черви'), (11, 'крести'), (3, 'черви')
>> ушло времени времени на перемешивание: 0.000346 c
"""

# ИТОГ: довольно хорошо — 5/6
